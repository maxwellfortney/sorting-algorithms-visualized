{"version":3,"sources":["Components/SettingsSelector/SortButton.js","Components/BarsVisualizer/BarsVisualizer.js","Components/SettingsSelector/SettingsSelectors.js","Algorithms/algorithms.js","App.js","index.js"],"names":["SortButton","React","Component","props","state","isHovered","this","theme","title","sortConfig","onClick","updateSortType","toLowerCase","className","onMouseEnter","setState","onMouseLeave","style","backgroundColor","type","navBackgroundHoverColor","SettingsSelectors","console","log","isSorting","updateSortConfig","e","arraySize","parseFloat","target","value","sortSpeed","id","color","navTextColor","opacity","alignSelf","marginLeft","display","alignItems","padding","background","navBackgroundBoxDark","navBackgroundBoxLight","boxShadow","navBackgroundBoxShadowDark","navBackgroundBoxShadowLight","min","max","step","onChange","handleSortSpeedChange","fontWeight","toFixed","handleArraySizeChange","barsArray","length","handleSortTypeChange","updateIsSorting","startSort","getMergeSortAnimations","array","animations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getHeapSortAnimations","a","n","max_heapify","indexValues","values","swap","heapSort","maximum","left","right","input","index_A","index_B","temp","getBubbleSortAnimations","inputArr","swapped","len","tmp","bubbleSort","getQuickSortAnimations","quickSort","items","index","pivot","partition","generateTheme","presetThemes","navBackgroundColor","mainBarColor","comparisonBarColor","randomThemeindex","getRandomInt","document","getElementById","href","ceil","random","generateBarsArray","ret","App","isMuted","newArray","synth","Tone","toDestination","x","arrayBars","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","setTimeout","newHeight","triggerAttackRelease","height","barOneHeight","barTwoHeight","barStyle","mergeSort","toggleMute","viewBox","fill","position","top","stroke","stroke-width","stroke-linejoin","points","stroke-linecap","d","strokeWidth","strokeLinejoin","strokeLinecap","fontSize","map","bar","flexGrow","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9101ca20.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SettingsSelectors.css';\r\n\r\nclass SortButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n        isHovered: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {theme, title, sortConfig} = this.props;\r\n\r\n    return (\r\n      <div onClick={() => this.props.updateSortType(title.toLowerCase())} className=\"aSortTypeButton\" onMouseEnter={() => this.setState({isHovered: true})} onMouseLeave={() => this.setState({isHovered: false})} style={{backgroundColor: this.state.isHovered ? theme.navBackgroundHoverColor : sortConfig.type === title.toLowerCase() ? theme.navBackgroundHoverColor:null}}>\r\n          {title}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default SortButton;\r\n","import React from 'react';\r\nimport './BarsVisualizer.css';\r\n\r\nclass BarsVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {theme, sortConfig, barsArray} = this.props;\r\n\r\n    return (\r\n      <div id=\"BarsVisualizer\">\r\n        {barsArray && barsArray.length > 0 ? (\r\n          <>\r\n          {barsArray.map((bar, i) => {\r\n            return (\r\n              <div className=\"aBar\" key={i} style={{height: `${(bar / 1000)*100}%`, flexGrow: \"1\", backgroundColor: theme.mainBarColor}}>\r\n              </div>\r\n            )\r\n          })}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default BarsVisualizer;\r\n","import React from 'react';\r\nimport SortButton from './SortButton';\r\nimport './SettingsSelectors.css';\r\n\r\nclass SettingsSelectors extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.props.isSorting)\r\n  }\r\n\r\n  handleSortTypeChange(type) {\r\n    if(!this.props.sortConfig) return;\r\n    const {sortConfig} = this.props;\r\n    sortConfig.type = type;\r\n    this.props.updateSortConfig(sortConfig, false);\r\n  }\r\n\r\n  handleArraySizeChange(e) {\r\n    if(!this.props.sortConfig) return;\r\n    const {sortConfig} = this.props;\r\n    sortConfig.arraySize = parseFloat(e.target.value);\r\n    this.props.updateSortConfig(sortConfig, true);\r\n  }\r\n\r\n  handleSortSpeedChange(e) {\r\n    if(!this.props.sortConfig) return;\r\n    const sortConfig = this.props.sortConfig;\r\n    sortConfig.sortSpeed = parseFloat(e.target.value);\r\n    this.props.updateSortConfig(sortConfig, false);\r\n  }\r\n\r\n  render() {\r\n    const {theme, isSorting} = this.props;\r\n\r\n    return (\r\n      <div id=\"SettingsSelectorsContainer\">\r\n        <div id=\"SortSpeedSelector\">\r\n          <div style={{color: theme.navTextColor, opacity: \".7\", alignSelf: \"flex-start\", marginLeft: \"15px\"}}>Sort Speed</div>\r\n          <div style={{display: \"flex\", alignItems: \"center\", padding: \"0 14px\", background: `linear-gradient(145deg, ${theme.navBackgroundBoxDark}, ${theme.navBackgroundBoxLight})`, boxShadow: `inset 20px 20px 60px ${theme.navBackgroundBoxShadowDark}, inset -20px -20px 60px ${theme.navBackgroundBoxShadowLight}`}} className=\"aSetttingMenuBar\">\r\n            <input id=\"sortSpeedInput\" value={this.props.sortConfig?.sortSpeed} type=\"range\" min=\"0.01\" max=\"15\" step=\".01\" onChange={(e) => this.handleSortSpeedChange(e)}/>\r\n            <p style={{color: theme.navTextColor, marginLeft:\"7px\", fontWeight: \"600\"}}>{this.props?.sortConfig ? (parseFloat(this.props.sortConfig?.sortSpeed)).toFixed(2) : 0}</p>\r\n            {/* <Slider className=\"arraySizeInput\" value={this.props.sortConfig?.arraySize} min=\"2\" max=\"200\" step=\"1\" onChange={(e) => this.handleArraySizeChange(e)}/> */}\r\n          </div>\r\n        </div>\r\n        <div id=\"ArraySizeSelector\">\r\n          <div style={{color: theme.navTextColor, opacity: \".7\", alignSelf: \"flex-start\", marginLeft: \"15px\"}}>Array Size</div>\r\n          <div style={{padding: \"0 14px\", display: \"flex\", alignItems: \"center\", background: `linear-gradient(145deg, ${theme.navBackgroundBoxDark}, ${theme.navBackgroundBoxLight})`, boxShadow: `inset 20px 20px 60px ${theme.navBackgroundBoxShadowDark}, inset -20px -20px 60px ${theme.navBackgroundBoxShadowLight}`}} className=\"aSetttingMenuBar\">\r\n            <input id=\"arraySizeInput\" value={this.props.sortConfig?.arraySize} type=\"range\" min=\"2\" max=\"300\" step=\"1\" onChange={(e) => this.handleArraySizeChange(e)}/>\r\n            <p style={{color: theme.navTextColor, marginLeft:\"7px\", fontWeight: \"600\"}}>{this.props.barsArray ? this.props.barsArray.length : 0}</p>\r\n            {/* <Slider className=\"arraySizeInput\" value={this.props.sortConfig?.arraySize} min=\"2\" max=\"200\" step=\"1\" onChange={(e) => this.handleArraySizeChange(e)}/> */}\r\n          </div>\r\n        </div>\r\n        <div id=\"SortTypeSelector\">\r\n          <div style={{color: theme.navTextColor, opacity: \".7\", alignSelf: \"flex-start\", marginLeft: \"15px\"}}>Sort Type</div>\r\n          <div style={{display: \"flex\", alignItems: \"center\", color: theme.navTextColor , background: `linear-gradient(145deg, ${theme.navBackgroundBoxDark}, ${theme.navBackgroundBoxLight})`, boxShadow: `inset 20px 20px 60px ${theme.navBackgroundBoxShadowDark}, inset -20px -20px 60px ${theme.navBackgroundBoxShadowLight}`}} className=\"aSetttingMenuBar\">            \r\n            <SortButton updateSortType={(type) => this.handleSortTypeChange(type)} title=\"Quick\" theme={this.props.theme} sortConfig={this.props.sortConfig}/>\r\n            <SortButton updateSortType={(type) => this.handleSortTypeChange(type)} title=\"Merge\" theme={this.props.theme} sortConfig={this.props.sortConfig}/>\r\n            <SortButton updateSortType={(type) => this.handleSortTypeChange(type)} title=\"Heap\" theme={this.props.theme} sortConfig={this.props.sortConfig}/>\r\n            <SortButton updateSortType={(type) => this.handleSortTypeChange(type)} title=\"Bubble\" theme={this.props.theme} sortConfig={this.props.sortConfig}/>\r\n          </div>\r\n        </div>\r\n        <div id=\"StartSortSelector\">\r\n          <div onClick={() => isSorting ? this.props.updateIsSorting(false) : this.props.startSort()} style={{padding: \"0 14px\", display: \"flex\", alignItems: \"center\", color: theme.navTextColor , background: `linear-gradient(145deg, ${theme.navBackgroundBoxDark}, ${theme.navBackgroundBoxLight})`, boxShadow: `inset 20px 20px 60px ${theme.navBackgroundBoxShadowDark}, inset -20px -20px 60px ${theme.navBackgroundBoxShadowLight}`}} className=\"aSetttingMenuBar\">\r\n          {isSorting ? \"Stop\":\"Sort\"}\r\n          </div>\r\n        </div>        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default SettingsSelectors;\r\n","export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n  }\r\n  \r\n  function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n  }\r\n  \r\n  function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, j]);\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index i in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index j in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[j]]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, i]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, i]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index i in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([j, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([j, j]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n\r\n\r\n// Heap Sort\r\n\r\nexport function getHeapSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  heapSort(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction heapSort(a, animations){  \r\n  let n = a.length;\r\n  for(let i=Math.floor(n/2)-1;i>=0;i--){\r\n      max_heapify(a,i,n, animations);            //Building max heap\r\n  }\r\n  for(let i = n-1;i>=0;i--){\r\n      animations.push({type:\"swap\", indexValues: [0,i], values: [a[0], a[i]]});\r\n      swap(a,0,i);              //Deleting root element\r\n      max_heapify(a,0,i, animations);           //Building max heap again\r\n  }\r\n  return a;\r\n}\r\n\r\n\r\nfunction max_heapify(a,i,n, animations){\r\n  console.log(animations)\r\n  let left = 2*i;              //Left child index\r\n  let right = 2*i+1;           //Right child index\r\n  let maximum;\r\n  \r\n  if(right<n){                 //Checks if right child exist      \r\n    animations.push({type:\"compare\", indexValues: [left,right]});\r\n    animations.push({type:\"compare-remove\", indexValues: [left,right]});\r\n    if(a[left]>=a[right]){    //Compares children to find maximum\r\n          maximum = left;\r\n      }\r\n      else{\r\n          maximum = right;\r\n      }\r\n  }\r\n  else if(left<n){                //Checks if left child exists\r\n      maximum = left;\r\n  }\r\n  else return;                    //In case of no children return\r\n  if(a[i]<a[maximum]){            //Checks if the largest child is greater than parent\r\n      animations.push({type:\"swap\", indexValues: [i,maximum], values: [a[i], a[maximum]]});\r\n      swap(a,i,maximum);          //If it is then swap both\r\n      max_heapify(a,maximum,n, animations);       //max-heapify again\r\n  }\r\n  return;\r\n}\r\n\r\nfunction swap(input, index_A, index_B) {\r\n  var temp = input[index_A];\r\n\r\n  input[index_A] = input[index_B];\r\n  input[index_B] = temp;\r\n}\r\n\r\n\r\n// Bubble sort\r\nexport function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  bubbleSort(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction bubbleSort(inputArr, animations){\r\n  let len = inputArr.length;\r\n  let swapped;\r\n  do {\r\n      swapped = false;\r\n      for (let i = 0; i < len; i++) {\r\n          animations.push({type:\"compare\", indexValues: [i,i+1]});          \r\n          if (inputArr[i] > inputArr[i + 1]) {\r\n            animations.push({type:\"swap\", indexValues: [i,i+1], values: [inputArr[i], inputArr[i+1]]});\r\n              let tmp = inputArr[i];\r\n              inputArr[i] = inputArr[i + 1];\r\n              inputArr[i + 1] = tmp;              \r\n              swapped = true;\r\n          }\r\n          animations.push({type:\"compare-remove\", indexValues: [i,i+1]});\r\n      }\r\n  } while (swapped);\r\n  return inputArr;\r\n};\r\n\r\n// Quick sort\r\nexport function getQuickSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  quickSort(array, 0, array.length-1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction quickSort(items, left, right, animations) {\r\n  var index;\r\n  if (items.length > 1) {\r\n      index = partition(items, left, right, animations); //index returned from partition      \r\n      if (left < index - 1) { //more elements on the left side of the pivot\r\n          quickSort(items, left, index - 1, animations);\r\n      }\r\n      if (index < right) { //more elements on the right side of the pivot\r\n          quickSort(items, index, right, animations);\r\n      }\r\n  }\r\n  return items;\r\n}\r\n\r\nfunction partition(items, left, right, animations) {\r\n  var pivot   = items[Math.floor((right + left) / 2)], //middle element\r\n      i       = left, //left pointer\r\n      j       = right; //right pointer\r\n  animations.push({type:\"set-pivot\", index: Math.floor((right + left) / 2)});\r\n  while (i <= j) {\r\n      while (items[i] < pivot) {\r\n          animations.push({type:\"compare\", indexValues: [i,Math.floor((right + left) / 2)], values: [items[i], \"pivot\"]});\r\n          animations.push({type:\"compare-remove\", indexValues: [i,Math.floor((right + left) / 2)], values: [items[i], \"pivot\"]});\r\n          i++;\r\n      }\r\n      while (items[j] > pivot) {\r\n          animations.push({type:\"compare\", indexValues: [j,Math.floor((right + left) / 2)], values: [items[i], \"pivot\"]});\r\n          animations.push({type:\"compare-remove\", indexValues: [j,Math.floor((right + left) / 2)], values: [items[i], \"pivot\"]});\r\n          j--;\r\n      }\r\n      if (i <= j) {\r\n          animations.push({type:\"swap\", indexValues: [i,j], values: [items[i], items[j]]});\r\n          swap(items, i, j); //swapping two elements\r\n          i++;\r\n          j--;\r\n      }\r\n  }\r\n  animations.push({type:\"remove-pivot\", index: Math.floor((right + left) / 2)});\r\n  return i;\r\n}","import React from 'react';\nimport './App.css';\nimport BarsVisualizer from './Components/BarsVisualizer/BarsVisualizer';\nimport SettingsSelectors from './Components/SettingsSelector/SettingsSelectors';\nimport {getBubbleSortAnimations, getHeapSortAnimations, getMergeSortAnimations, getQuickSortAnimations} from \"./Algorithms/algorithms\";\nimport * as Tone from 'tone'\n\nconst generateTheme = () => {\n  const presetThemes = [\n    {\n      // Pinkish/Red\n      backgroundColor: \"#ff5990\",\n      navBackgroundColor: \"#e53972\",\n      navBackgroundBoxDark: \"#ce3367\",\n      navBackgroundBoxLight: \"#f53d7a\",\n      navBackgroundBoxShadowDark: \"#c33061\",\n      navBackgroundBoxShadowLight: \"#ff4283\",\n      navBackgroundHoverColor: \"#a4234e\",\n      navTextColor: \"#FFFFFF\",\n      mainBarColor: \"#ba1e4e\",\n      comparisonBarColor: \"#ff709c\"\n    },\n    {\n      // Blue\n      backgroundColor: \"#5069ff\",\n      navBackgroundColor: \"#344eed\",\n      navBackgroundBoxDark: \"#2f46d5\",\n      navBackgroundBoxLight: \"#3853fe\",\n      navBackgroundBoxShadowDark: \"#2c42c9\",\n      navBackgroundBoxShadowLight: \"#3c5aff\",\n      navBackgroundHoverColor: \"#162db6\",\n      navTextColor: \"#FFFFFF\",\n      mainBarColor: \"#2037bc\",\n      comparisonBarColor: \"#8d9dff\"\n    },\n    {\n      // Dark/Army Green\n      backgroundColor: \"#60844D\",\n      navBackgroundColor: \"#446c2f\",\n      navBackgroundBoxDark: \"#3d612a\",\n      navBackgroundBoxLight: \"#497432\",\n      navBackgroundBoxShadowDark: \"#3a5c28\",\n      navBackgroundBoxShadowLight: \"#4e7c36\",\n      navBackgroundHoverColor: \"#2f4f1d\",\n      navTextColor: \"#FFFFFF\",\n      mainBarColor: \"#3b6525\",\n      comparisonBarColor: \"#81b168\"\n    }\n  ]\n  const randomThemeindex = getRandomInt(0,presetThemes.length);\n  const theme = presetThemes[randomThemeindex];\n\n  switch(randomThemeindex) {\n    case 0:\n      document.getElementById(\"favicon\").href = \"https://drive.google.com/uc?export=view&id=1Rb9JdoAoiDBMIXp4gNWqsKceDNAhw67M\"\n      break;\n    case 1:\n      document.getElementById(\"favicon\").href = \"https://drive.google.com/uc?export=view&id=1qjVeP7EhH07ZFIAEiW8HMdOflHqVGcbO\"\n      break;\n    case 2:\n      document.getElementById(\"favicon\").href = \"https://drive.google.com/uc?export=view&id=1e3Jgg7RItgIC5wkaxmeHaLbQOwR113TG\"\n      break;\n  }\n\n  console.log(theme);\n  return theme;\n}\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst generateBarsArray = (arraySize) => {\n  let ret = [];\n  for(let i=0; i < arraySize; i++) {\n    ret.push(getRandomInt(5, 1000));\n  }\n\n  return ret;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const arraySize = getRandomInt(2, 300);\n    \n    this.state = {\n      theme: generateTheme(),\n      sortConfig: {\n        type: \"quick\",\n        arraySize,\n        sortSpeed : (15 - ((arraySize / 300) * 15)) \n      },\n      barsArray : generateBarsArray(arraySize),\n      isSorting: false,\n      isMuted: true\n    }\n  }\n\n  componentDidMount() {\n    console.log(this.state)\n  }\n\n  updateSortConfig(sortConfig, newArray = false) {\n    console.log(newArray)\n    console.log(sortConfig)\n    console.log(this.state.sortConfig)\n\n    if(sortConfig.arraySize === this.state.sortConfig.arraySize) {\n      this.setState({sortConfig});\n    }\n    if(newArray) {\n      console.log(\"ERHEHRHERHH\")\n      this.setState({sortConfig, barsArray: generateBarsArray(sortConfig.arraySize)});\n    }\n  }\n\n  calcMergeAnimationSpeed() {\n    if( 50 >= this.state.barsArray.length && this.state.barsArray.length > 0) {\n      return 12;\n    } else if(100 >= this.state.barsArray.length && this.state.barsArray.length > 50) {\n      return 10;\n    } else if(300 >= this.state.barsArray.length && this.state.barsArray.length > 100) {\n      return 6;\n    }    \n  }\n\n  async mergeSort() {\n    const synth = new Tone.Synth().toDestination();\n    const x = this.state.barsArray;\n    console.log(this.state)\n\n    const animations = getMergeSortAnimations(x);\n    console.log(this.state)\n    console.log(animations);\n    for (let i = 0; i < animations.length; i++) {      \n      const arrayBars = document.getElementsByClassName('aBar');\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? this.state.theme.comparisonBarColor : this.state.theme.mainBarColor;\n        setTimeout(() => {\n          if(!this.state.isSorting) return;       \n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n          if(i === animations.length -1) {\n            this.setState({isSorting: false});\n          }          \n        }, i * this.state.sortConfig.sortSpeed);\n      } else {\n        setTimeout(() => {\n          if(!this.state.isSorting) return;\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx]?.style;\n          console.log(newHeight)\n          if(!this.state.isMuted) {\n            try {\n              synth.triggerAttackRelease(newHeight, .1)\n            } catch(e) {\n              // Nothing\n            }\n          }\n          barOneStyle.height = `${(newHeight / 1000)*100}%`;          \n          if(i === animations.length -1) {\n            this.setState({isSorting: false});\n          }          \n        }, i * this.state.sortConfig.sortSpeed);\n      }\n    }    \n  }\n\n  async heapSort() {\n    const synth = new Tone.Synth().toDestination();\n    const x = this.state.barsArray;\n    console.log(this.state);\n\n    const animations = getHeapSortAnimations(x);\n    console.log(this.state);\n    console.log(animations);    \n\n    for(let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('aBar');\n\n      if(animations[i].type === \"compare\" || animations[i].type === \"compare-remove\") {\n        const [barOneIdx, barTwoIdx] = animations[i].indexValues;\n        const barOneStyle = arrayBars[barOneIdx]?.style;\n        const barTwoStyle = arrayBars[barTwoIdx]?.style;\n        let color;\n        if(animations[i].type === \"compare\") {\n          color = this.state.theme.comparisonBarColor;\n        }\n        if(animations[i].type === \"compare-remove\") {\n          color = this.state.theme.mainBarColor;\n\n        }\n\n        setTimeout(() => {\n          if(!this.state.isSorting) return;\n          if(barOneStyle) {\n            barOneStyle.backgroundColor = color;\n          }\n          if(barTwoStyle) {\n            barTwoStyle.backgroundColor = color;\n          }\n          if(i === animations.length -1) {\n            this.setState({isSorting: false});\n          }\n        }, i * this.state.sortConfig.sortSpeed);\n      } else  {\n        setTimeout(() => {\n          if(!this.state.isSorting) return;\n          const [barOneIdx, barTwoIdx] = animations[i].indexValues;\n          const [barOneHeight, barTwoHeight] = animations[i].values;                  \n\n          // console.log(newHeight)\n          if(!this.state.isMuted) {\n            try {\n              synth.triggerAttackRelease(barOneHeight, .1)\n              synth.triggerAttackRelease(barTwoHeight, .1)\n            } catch(e) {\n              // Nothing\n            }\n          }\n\n          if(barOneHeight && barTwoHeight) {\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            barOneStyle.height = `${(barTwoHeight / 1000)*100}%`;\n            barTwoStyle.height = `${(barOneHeight / 1000)*100}%`;\n          }\n          \n          if(i === animations.length -1) {\n            this.setState({isSorting: false});\n          }      \n        }, i * this.state.sortConfig.sortSpeed);\n      }\n    }\n  }\n\n  async bubbleSort() {\n    const synth = new Tone.Synth().toDestination();\n    const x = this.state.barsArray;\n    console.log(this.state);\n\n    const animations = getBubbleSortAnimations(x);\n    console.log(this.state);\n    console.log(animations);    \n\n    for(let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('aBar');\n\n      if(animations[i].type === \"compare\" || animations[i].type === \"compare-remove\") {\n        const [barOneIdx, barTwoIdx] = animations[i].indexValues;\n        const barOneStyle = arrayBars[barOneIdx]?.style;\n        const barTwoStyle = arrayBars[barTwoIdx]?.style;\n        let color;\n        if(animations[i].type === \"compare\") {\n          color = this.state.theme.comparisonBarColor;\n        }\n        if(animations[i].type === \"compare-remove\") {\n          color = this.state.theme.mainBarColor;\n\n        }\n\n        setTimeout(() => {\n          if(!this.state.isSorting) return;\n          if(barOneStyle) {\n            barOneStyle.backgroundColor = color;\n          }\n          if(barTwoStyle) {\n            barTwoStyle.backgroundColor = color;\n          }\n          if(i === animations.length -1) {\n            this.setState({isSorting: false});\n          }\n        }, i * this.state.sortConfig.sortSpeed);\n      } else  {\n        setTimeout(() => {\n          if(!this.state.isSorting) return;\n          const [barOneIdx, barTwoIdx] = animations[i].indexValues;\n          const [barOneHeight, barTwoHeight] = animations[i].values;                  \n\n          // console.log(newHeight)\n          if(!this.state.isMuted) {\n            try {\n              synth.triggerAttackRelease(barOneHeight, .1)\n              synth.triggerAttackRelease(barTwoHeight, .1)\n            } catch(e) {\n              // Nothing\n            }\n          }\n\n          if(barOneHeight && barTwoHeight) {\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            barOneStyle.height = `${(barTwoHeight / 1000)*100}%`;\n            barTwoStyle.height = `${(barOneHeight / 1000)*100}%`;\n          }\n          \n          if(i === animations.length -1) {\n            this.setState({isSorting: false});\n          }          \n        }, i * this.state.sortConfig.sortSpeed);\n      }\n    }\n  }\n\n  async quickSort() {\n    const synth = new Tone.Synth().toDestination();\n    const x = this.state.barsArray;\n    console.log(this.state);\n\n    const animations = getQuickSortAnimations(x);\n    console.log(this.state);\n    console.log(animations);    \n\n    for(let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('aBar');\n\n      if(animations[i].type === \"compare\" || animations[i].type === \"compare-remove\") {\n        const [barOneIdx, barTwoIdx] = animations[i].indexValues;\n        const barOneStyle = arrayBars[barOneIdx]?.style;\n        const barTwoStyle = arrayBars[barTwoIdx]?.style;\n        let color;\n        if(animations[i].type === \"compare\") {\n          color = this.state.theme.comparisonBarColor;\n        }\n        if(animations[i].type === \"compare-remove\") {\n          color = this.state.theme.mainBarColor;\n        }\n\n        setTimeout(() => {\n          if(!this.state.isSorting) return;\n          if(barOneStyle) {\n            if(animations[i].values[0] !== \"pivot\") {\n              barOneStyle.backgroundColor = color;\n            }\n          }\n          if(barTwoStyle) {\n            if(animations[i].values[1] !== \"pivot\") {\n              barTwoStyle.backgroundColor = color;\n            }\n          }\n          if(i === animations.length -1) {\n            this.setState({isSorting: false});\n          }\n        }, i * this.state.sortConfig.sortSpeed);\n      } else if(animations[i].type === \"set-pivot\" || animations[i].type === \"remove-pivot\") {\n        const barStyle = arrayBars[animations[i].index]?.style;\n\n        let color;\n        if(animations[i].type === \"set-pivot\") {\n          color = this.state.theme.navTextColor;\n        }\n        if(animations[i].type === \"remove-pivot\") {\n          color = this.state.theme.mainBarColor;\n        }\n\n        setTimeout(() => {\n          if(!this.state.isSorting) return;\n          if(barStyle) {\n            barStyle.backgroundColor = color;\n          }\n          if(i === animations.length -1) {\n            this.setState({isSorting: false});\n          }\n        }, i * this.state.sortConfig.sortSpeed);\n      }else {\n        setTimeout(() => {\n          if(!this.state.isSorting) return;\n          const [barOneIdx, barTwoIdx] = animations[i].indexValues;\n          const [barOneHeight, barTwoHeight] = animations[i].values;                  \n\n          // console.log(newHeight)\n          if(!this.state.isMuted) {\n            try {\n              synth.triggerAttackRelease(barOneHeight, .1)\n              synth.triggerAttackRelease(barTwoHeight, .1)\n            } catch(e) {\n              // Nothing\n            }\n          }\n\n          if(barOneHeight && barTwoHeight) {\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            barOneStyle.height = `${(barTwoHeight / 1000)*100}%`;\n            barTwoStyle.height = `${(barOneHeight / 1000)*100}%`;\n          }\n          \n          if(i === animations.length -1) {\n            this.setState({isSorting: false});\n          }\n        }, i * this.state.sortConfig.sortSpeed);\n      }\n    }\n  }\n\n  async startSort() {\n    await Tone.start();\n    this.setState({isSorting: true});\n    console.log(this.state)\n    if(this.state.sortConfig.type === \"quick\") {\n      await this.quickSort();\n    } else if(this.state.sortConfig.type === \"merge\") {\n      await this.mergeSort()\n    } else if(this.state.sortConfig.type === \"heap\") {\n      await this.heapSort()\n    } else if(this.state.sortConfig.type === \"bubble\") {\n      await this.bubbleSort()\n    }\n    // this.setState({isSorting: false});\n    // this.setState({barsArray: await this.mergeSort(this.state.barsArray)});\n  }\n\n  toggleMute(isMuted) {\n    console.log(this.state)\n    this.setState({isMuted})\n  }\n\n  render() {\n    const {theme, barsArray} = this.state;\n    return (\n      <div id=\"App\" style={{backgroundColor: theme.backgroundColor}}>\n        {this.state.isMuted ? (\n          <svg className=\"muteButton\" onClick={() => this.toggleMute(false)} viewBox=\"0 0 75 75\" fill={theme.navTextColor} height=\"18px\" style={{position: \"absolute\", top: \"7px\", right: \"35px\"}}>\n            <polygon stroke={theme.navTextColor} stroke-width=\"5\" stroke-linejoin=\"round\" points=\"39.389,13.769 22.235,28.606 6,28.606 6,47.698 21.989,47.698 39.389,62.75 \"/>\n            <path fill=\"none\" stroke={theme.navTextColor} stroke-width=\"5\" stroke-linecap=\"round\" d=\"M55.081,20.537\n              c3.695,4.986,5.885,11.157,5.885,17.84c0,6.62-2.151,12.737-5.788,17.698 M61.71,62.61c5.267-6.666,8.418-15.08,8.418-24.232\n              c0-9.217-3.192-17.682-8.52-24.368 M48.128,49.029c1.929-3.096,3.062-6.738,3.062-10.652c0-3.978-1.164-7.674-3.146-10.8\"\n            />\n          </svg>\n        ) : (\n          <svg className=\"muteButton\" onClick={() => this.toggleMute(true)} viewBox=\"0 0 75 75\" fill={theme.navTextColor} height=\"18px\" style={{position: \"absolute\", top: \"7px\", right: \"35px\"}}>\n            <polygon\n              id=\"polygon1\"\n              points=\"39.389,13.769 22.235,28.606 6,28.606 6,47.699 21.989,47.699 39.389,62.75 39.389,13.769\"\n              style={{stroke: theme.navTextColor, strokeWidth: 5, strokeLinejoin: \"round\", fill: theme.navTextColor}}\n            />\n            <path\n              id=\"path3003\"\n              d=\"M 48.651772,50.269646 69.395223,25.971024\"\n              style={{fill: \"none\",stroke: theme.navTextColor, strokeWidth: 5, strokeLinecap: \"round\"}}\n            />\n            <path\n              id=\"path3003-1\"\n              d=\"M 69.395223,50.269646 48.651772,25.971024\"\n              style={{fill: \"none\",stroke: theme.navTextColor, strokeWidth: 5, strokeLinecap: \"round\"}}\n            />\n          </svg>\n        )}\n        <svg id=\"shuffleThemeButton\" onClick={() => this.setState({theme: generateTheme()})} viewBox=\"0 0 512 512\" height=\"15px\" fill={theme.navTextColor} style={{position: \"absolute\", top: \"9px\", right: \"10px\"}}>\n          <path d=\"M506.24,371.7l-96-80c-4.768-4-11.424-4.8-17.024-2.208c-5.632,2.656-9.216,8.288-9.216,14.496v48h-26.784\n            c-22.208,0-42.496-11.264-54.272-30.08l-103.616-165.76c-23.52-37.664-64.096-60.16-108.544-60.16H0v64h90.784\n            c22.208,0,42.496,11.264,54.272,30.08l103.616,165.76c23.552,37.664,64.128,60.16,108.544,60.16H384v48\n            c0,6.208,3.584,11.84,9.216,14.496c2.144,0.992,4.48,1.504,6.784,1.504c3.68,0,7.328-1.248,10.24-3.712l96-80\n            c3.68-3.04,5.76-7.552,5.76-12.288C512,379.252,509.92,374.74,506.24,371.7z\"\n          />\n          <path d=\"M506.24,115.7l-96-80c-4.768-3.968-11.424-4.8-17.024-2.176C387.584,36.116,384,41.78,384,47.988v48h-26.784\n            c-44.448,0-85.024,22.496-108.544,60.16l-5.792,9.28l37.728,60.384l22.336-35.744c11.776-18.816,32.064-30.08,54.272-30.08H384v48\n            c0,6.208,3.584,11.872,9.216,14.496c2.144,0.992,4.48,1.504,6.784,1.504c3.68,0,7.328-1.28,10.24-3.712l96-80\n            c3.68-3.04,5.76-7.552,5.76-12.288C512,123.252,509.92,118.74,506.24,115.7z\"\n          />\n          <path d=\"M167.392,286.164l-22.304,35.744c-11.776,18.816-32.096,30.08-54.304,30.08H0v64h90.784\n            c44.416,0,84.992-22.496,108.544-60.16l5.792-9.28L167.392,286.164z\"\n          />\n        </svg>\n        <a href=\"https://github.com/maxwellfortney\" target=\"_blank\">\n          <p id=\"myGithubLink\" style={{color: theme.navTextColor, position: \"absolute\", top: \"-3px\", left: \"10px\", fontSize: \"13px\", fontWeight: \"600\"}}>Built by: Maxwell Fortney</p>   \n        </a>        \n        <SettingsSelectors theme={theme} sortConfig={this.state.sortConfig} barsArray={this.state.barsArray} isSorting={this.state.isSorting} updateIsSorting={(x) => this.setState({isSorting: x})} updateSortConfig={(sortConfig, newArray) => this.updateSortConfig(sortConfig, newArray)} startSort={() => this.startSort()}/>\n        {/* <BarsVisualizer theme={theme} sortConfig={this.state.sortConfig} barsArray={this.state.barsArray}/> */}\n        <div id=\"BarsVisualizer\">\n        {barsArray && barsArray.length > 0 ? (\n          <>\n          {barsArray.map((bar, i) => {\n            return (\n              <div className=\"aBar\" key={i} style={{height: `${(bar / 1000)*100}%`, flexGrow: \"1\", backgroundColor: theme.mainBarColor}}>\n              </div>\n            )\n          })}\n          </>\n        ) : null}\n      </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}